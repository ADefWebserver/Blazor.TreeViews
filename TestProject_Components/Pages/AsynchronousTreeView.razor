@page "/asynchronous_tree_view"
<SourceCodeLink Repository="Blazor.TreeViews" Page="@nameof(AsynchronousTreeView)" />

<h4>Custom loading template</h4>
<TreeViewAsync GetChildrenAsync="GetChildrenAsync" HasChildrenAsync="HasChildrenAsync" AllowSelection="true" SelectedItems="SelectedItems">
    <ItemTemplate>
        @context.Item.Self
    </ItemTemplate>
    <LoadingTemplate>
        Loading...
    </LoadingTemplate>
</TreeViewAsync>

@code { 

    private List<Item> SelectedItems { get; set; }

    private async Task<List<Item>> GetChildrenAsync(Item i)
    {
        if (i == null) return new List<Item>{new Item{Self = "A"}, new Item { Self = "A" } };
        await Task.Delay(1000);
        char c = (char)i.Self[0];
        char next = (char)(c + 1);
        return new List<Item> { new Item { Self = next.ToString() } };
    }

    private async Task<bool> HasChildrenAsync(Item i)
    {
        if (i == null) return true;
        await Task.Delay(1000);
        return i.Self != "E";
    }

    private class Item
    {
        public string Self { get; set; }
        public List<Item> Children { get; set; } = new List<Item>();
    }
}
